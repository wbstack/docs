(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{390:function(e,t,i){"use strict";i.r(t);var n=i(24),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"custom-domain-ingress-creation"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#custom-domain-ingress-creation"}},[e._v("#")]),e._v(" Custom domain ingress creation")]),e._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),i("p",[e._v("This decision document has not yet been formatted for nice display...")])]),e._v(" "),i("p",[e._v("Date: 10 April 2020\nDecision: Implemented")]),e._v(" "),i("p",[e._v("Originally when adding sites to the stack a new ingress resource would be created.\nThis broke in Dec 2019 when the platform reached just under 100 wikis due to imposed GKE limitations.\nSee https://github.com/addshore/wbstack/issues/39")]),e._v(" "),i("p",[e._v("When implementing custom domain support in https://github.com/addshore/wbstack/issues/72 I noticed that this limit had greatly increased.")]),e._v(" "),i("p",[e._v("In an ideal world we would not reload the nginx ingress config every time we add a new custom domain wiki.\nInstead the ingress should be wildcard and the platform app decides if the wiki exists.")]),e._v(" "),i("p",[e._v("The issue with this is https certificates which need to be plumbed into the ingress in some way currently.\nThey do not necessarily need a new ingress, but a new domain and certificate location would need to be added to an existing ingress.")]),e._v(" "),i("p",[e._v("In terms of nginx the feature described in the following link could be nice https://www.nginx.com/blog/nginx-plus-r18-released/#dynamic-certificate-loading")]),e._v(" "),i("p",[e._v('Ultimately this will need a different solution, but multiple ingresses maintained by "the platform" is the direction for now.')])])}),[],!1,null,null,null);t.default=s.exports}}]);